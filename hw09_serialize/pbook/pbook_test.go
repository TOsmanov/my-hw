package pbook

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"google.golang.org/protobuf/proto"
)

var (
	books = []*Book{
		{
			Id:     "978-5-04-154507-9",
			Title:  "Моби Дик",
			Author: "Герман Мелвилл",
			Year:   1851,
			Size:   576,
			Rate:   9,
		},
		{
			Id:     "978-5-17-109413-3",
			Title:  "Приключения Тома Сойера",
			Author: "Марк Твен",
			Year:   1876,
			Size:   90,
			Rate:   9.7,
		},
		{
			Id:     "978-5-04-116639-7",
			Title:  "Приключения Гекльберри Финна",
			Author: "Марк Твен",
			Year:   1884,
			Size:   95,
			Rate:   9.3,
		},
	}

	pBooks = Books{
		Book: books,
	}

	bBooks = []byte{
		0xa, 0x4c, 0xa, 0x11, 0x39, 0x37, 0x38, 0x2d, 0x35, 0x2d, 0x30, 0x34, 0x2d, 0x31, 0x35, 0x34,
		0x35, 0x30, 0x37, 0x2d, 0x39, 0x12, 0xf, 0xd0, 0x9c, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb8, 0x20,
		0xd0, 0x94, 0xd0, 0xb8, 0xd0, 0xba, 0x1a, 0x1b, 0xd0, 0x93, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbc,
		0xd0, 0xb0, 0xd0, 0xbd, 0x20, 0xd0, 0x9c, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb2, 0xd0, 0xb8, 0xd0,
		0xbb, 0xd0, 0xbb, 0x20, 0xbb, 0xe, 0x28, 0xc0, 0x4, 0x35, 0x0, 0x0, 0x10, 0x41, 0xa, 0x5e, 0xa,
		0x11, 0x39, 0x37, 0x38, 0x2d, 0x35, 0x2d, 0x31, 0x37, 0x2d, 0x31, 0x30, 0x39, 0x34, 0x31, 0x33,
		0x2d, 0x33, 0x12, 0x2c, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xbb, 0xd1, 0x8e,
		0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xa2, 0xd0, 0xbe, 0xd0,
		0xbc, 0xd0, 0xb0, 0x20, 0xd0, 0xa1, 0xd0, 0xbe, 0xd0, 0xb9, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb0,
		0x1a, 0x11, 0xd0, 0x9c, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xba, 0x20, 0xd0, 0xa2, 0xd0, 0xb2, 0xd0,
		0xb5, 0xd0, 0xbd, 0x20, 0xd4, 0xe, 0x28, 0x5a, 0x35, 0x33, 0x33, 0x1b, 0x41, 0xa, 0x68, 0xa,
		0x11, 0x39, 0x37, 0x38, 0x2d, 0x35, 0x2d, 0x30, 0x34, 0x2d, 0x31, 0x31, 0x36, 0x36, 0x33, 0x39,
		0x2d, 0x37, 0x12, 0x36, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xbb, 0xd1, 0x8e,
		0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0x93, 0xd0, 0xb5, 0xd0,
		0xba, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb1, 0xd0, 0xb5, 0xd1, 0x80, 0xd1, 0x80, 0xd0, 0xb8, 0x20,
		0xd0, 0xa4, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xbd, 0xd0, 0xb0, 0x1a, 0x11, 0xd0, 0x9c, 0xd0, 0xb0,
		0xd1, 0x80, 0xd0, 0xba, 0x20, 0xd0, 0xa2, 0xd0, 0xb2, 0xd0, 0xb5, 0xd0, 0xbd, 0x20, 0xdc, 0xe,
		0x28, 0x5f, 0x35, 0xcd, 0xcc, 0x14, 0x41,
	}

	bBook = []byte{
		0xa, 0x11, 0x39, 0x37, 0x38, 0x2d, 0x35, 0x2d, 0x30, 0x34, 0x2d, 0x31, 0x35, 0x34,
		0x35, 0x30, 0x37, 0x2d, 0x39, 0x12, 0xf, 0xd0, 0x9c, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb8, 0x20,
		0xd0, 0x94, 0xd0, 0xb8, 0xd0, 0xba, 0x1a, 0x1b, 0xd0, 0x93, 0xd0, 0xb5, 0xd1, 0x80, 0xd0,
		0xbc, 0xd0, 0xb0, 0xd0, 0xbd, 0x20, 0xd0, 0x9c, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb2, 0xd0,
		0xb8, 0xd0, 0xbb, 0xd0, 0xbb, 0x20, 0xbb, 0xe, 0x28, 0xc0, 0x4, 0x35, 0x0, 0x0, 0x10, 0x41,
	}
)

func TestProtoMarshal(t *testing.T) {
	pBook1 := books[0]
	expected := bBook
	j, err := proto.Marshal(pBook1.ProtoReflect().Interface())
	assert.Nil(t, err)
	assert.Equal(t, expected, j)
}

func TestProtoUnmarshal(t *testing.T) {
	var pBookCopy Book
	expected := books[0]
	err := proto.Unmarshal(bBook, &pBookCopy)

	assert.Nil(t, err)
	assert.Equal(t, expected.String(), pBookCopy.String())
}

func TestProtoMarshalSlice(t *testing.T) {
	expected := bBooks

	j, err := proto.Marshal(pBooks.ProtoReflect().Interface())
	assert.Nil(t, err)
	assert.Equal(t, expected, j)
}

func TestProtoUnmarshallice(t *testing.T) {
	expected := &pBooks

	var pBooksCopy Books
	err := proto.Unmarshal(bBooks, &pBooksCopy)
	assert.Nil(t, err)
	assert.Equal(t, expected.String(), pBooksCopy.String())
}

func TestProtoGetBook(t *testing.T) {
	assert.Equal(t, books, pBooks.GetBook())
}

func TestProtoGetters(t *testing.T) {
	assert.Equal(t, "978-5-04-154507-9", books[0].GetId())
	assert.Equal(t, "Моби Дик", books[0].GetTitle())
	assert.Equal(t, "Герман Мелвилл", books[0].GetAuthor())
	assert.Equal(t, int32(1851), books[0].GetYear())
	assert.Equal(t, int32(576), books[0].GetSize())
	assert.Equal(t, float32(9), books[0].GetRate())
}
